---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import MobileMenu from '../components/MobileMenu.astro';
import Hero from '../components/sections/Hero.astro';
import QuickInfo from '../components/sections/QuickInfo.astro';
import SpecialNotice from '../components/sections/SpecialNotice.astro';
import About from '../components/sections/About.astro';
import Aktuality from '../components/sections/Aktuality.astro';
import Services from '../components/sections/Services.astro';
import BlogGrid from '../components/sections/BlogGrid.astro';
import OpeningHours from '../components/sections/OpeningHours.astro';
import Contact from '../components/sections/Contact.astro';
import Footer from '../components/Footer.astro';

import { getTodayOpeningHours } from '../utils/openingHours';
import { getActiveSpecialNotice, getPublishedNews, getPublishedBlogPosts, blogEntryToCardData } from '../utils/contentHelpers';

const todayInfo = getTodayOpeningHours();
const specialNotice = await getActiveSpecialNotice();
const latestAktuality = (await getPublishedNews()).slice(0, 3);
const latestBlogPosts = (await getPublishedBlogPosts()).slice(0, 3).map((entry, index) => blogEntryToCardData(entry, index + 1));
---

<Layout title="Zdravíčko - Dětská ordinace | Kvalitní péče o vaše děti">
  <Header activePage="home" />
  <MobileMenu activePage="home" />
  
  <Hero />
  <QuickInfo todayInfo={todayInfo} />
  
  {specialNotice && <SpecialNotice notice={specialNotice} />}
  
  <Services />
  <Aktuality aktuality={latestAktuality} />
  <BlogGrid posts={latestBlogPosts} />
  <About />
  <OpeningHours />
  <Contact />
  
  <Footer />
</Layout>

<script>
  // Mobile menu toggle
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenuClose = document.getElementById('mobile-menu-close');
  const mobileMenu = document.getElementById('mobile-menu');
  const mobileMenuOverlay = document.getElementById('mobile-menu-overlay');
  
  function openMenu() {
    if (mobileMenu && mobileMenuOverlay) {
      mobileMenuOverlay.classList.remove('hidden');
      mobileMenuOverlay.offsetHeight; // Trigger reflow
      mobileMenuOverlay.classList.add('opacity-100');
      mobileMenu.classList.remove('translate-x-full');
    }
  }
  
  function closeMenu() {
    if (mobileMenu && mobileMenuOverlay) {
      mobileMenu.classList.add('translate-x-full');
      mobileMenuOverlay.classList.remove('opacity-100');
      setTimeout(() => mobileMenuOverlay.classList.add('hidden'), 300);
    }
  }
  
  mobileMenuButton?.addEventListener('click', openMenu);
  mobileMenuClose?.addEventListener('click', closeMenu);
  mobileMenuOverlay?.addEventListener('click', closeMenu);
  
  // Close menu when clicking a link
  const menuLinks = document.querySelectorAll('#mobile-menu a');
  menuLinks.forEach(link => link.addEventListener('click', closeMenu));
</script>
