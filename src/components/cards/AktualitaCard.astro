---
/**
 * AktualitaCard - Komponenta pro zobrazení jedné aktuality
 *
 * Zobrazuje kartu aktuality s ikonou, nadpisem, datem a markdown obsahem.
 * Barva karty se mění podle typu aktuality.
 * U dlouhých aktualit umožňuje rozbalování/sbalování obsahu.
 *
 * @component
 */
import { Icon } from 'astro-icon/components';
import { formatDateShort } from '../../utils/dateFormat';
import { getNewsCardClasses, getNewsIconBg } from '../../utils/newsColors';
import type { CollectionEntry } from 'astro:content';

interface Props {
  /** Aktualita z content kolekce */
  news: CollectionEntry<'news'>;
  /** Maximální výška obsahu před zkrácením (v px) */
  maxHeight?: number;
}

const { news, maxHeight = 200 } = Astro.props;

// Konstanta pro ID prefix
const NEWS_ID_PREFIX = 'news-';
const uniqueId = `${NEWS_ID_PREFIX}${news.id}`;

// Renderovat markdown obsah
const { Content } = await news.render();

// Získat styly podle barvy
const cardClasses = getNewsCardClasses(news.data.color);
const iconBgClass = getNewsIconBg(news.data.color);
---

<article
  id={uniqueId}
  class:list={[
    'rounded-xl border-2 p-5 transition-all shadow-sm hover:shadow-md scroll-mt-24',
    cardClasses
  ]}
>
  <div class="flex items-start gap-4">
    <!-- Ikona -->
    <div class:list={[
      'w-11 h-11 rounded-lg flex items-center justify-center shrink-0 shadow-sm',
      iconBgClass
    ]}>
      <Icon name={news.data.icon} class="w-6 h-6 text-white" />
    </div>

    <!-- Obsah -->
    <div class="flex-1 min-w-0">
      <!-- Nadpis a datum -->
      <div class="flex items-start justify-between gap-2 mb-2">
        <h3 class="font-bold text-lg text-gray-900 leading-tight">
          {news.data.title}
        </h3>
        <time class="text-xs text-gray-500 whitespace-nowrap mt-0.5">
          {formatDateShort(news.data.date.toISOString())}
        </time>
      </div>

      <!-- Markdown obsah s možností zkrácení -->
      <div class="relative">
        <div
          id={`content-${uniqueId}`}
          class="prose prose-sm max-w-none text-gray-700 [&>p]:mb-2 [&>p:last-child]:mb-0 [&>ul]:mb-2 [&>strong]:text-gray-900 [&>strong]:font-semibold transition-all duration-300 content-container"
          style={`max-height: ${maxHeight}px; overflow: hidden;`}
        >
          <Content />
        </div>
      </div>

      <!-- Tlačítko pro rozbalení/sbalení -->
      <button
        id={`toggle-${uniqueId}`}
        class="mt-3 text-sm font-semibold text-blue-600 hover:text-blue-700 transition-colors hidden items-center gap-1"
        aria-expanded="false"
      >
        <span class="expand-text">Zobrazit více</span>
        <span class="collapse-text hidden">Zobrazit méně</span>
        <Icon name="mdi:chevron-down" class="w-4 h-4 expand-icon transition-transform" />
        <Icon name="mdi:chevron-up" class="w-4 h-4 collapse-icon hidden transition-transform" />
      </button>
    </div>
  </div>
</article>

<style>
  .content-container {
    position: relative;
  }

  /* Fade efekt pomocí mask-image - funguje na jakémkoliv pozadí */
  .content-container[data-collapsed="true"] {
    -webkit-mask-image: linear-gradient(to bottom, black 60%, transparent 100%);
    mask-image: linear-gradient(to bottom, black 60%, transparent 100%);
  }

  .content-container[data-collapsed="false"] {
    -webkit-mask-image: none;
    mask-image: none;
  }
</style>

<script define:vars={{ uniqueId, maxHeight }}>
  // Funkce pro inicializaci konkrétní karty
  function initCard() {
    const content = document.getElementById(`content-${uniqueId}`);
    const toggle = document.getElementById(`toggle-${uniqueId}`);

    if (!content || !toggle) {
      return;
    }

    // Dočasně odstranit max-height pro správné měření
    const originalMaxHeight = content.style.maxHeight;
    content.style.maxHeight = 'none';

    // Změřit skutečnou výšku obsahu
    const actualHeight = content.scrollHeight;

    // Vrátit max-height zpět
    content.style.maxHeight = originalMaxHeight;

    // Zkontrolovat, jestli je obsah delší než maxHeight
    const isOverflowing = actualHeight > maxHeight;

    if (isOverflowing) {
      // Obsah je dlouhý - nastavit collapsed stav a zobrazit tlačítko
      content.setAttribute('data-collapsed', 'true');
      toggle.classList.remove('hidden');
      toggle.classList.add('flex');

      let isExpanded = false;

      // Odstranit předchozí event listener pokud existuje
      const newToggle = toggle.cloneNode(true);
      toggle.parentNode.replaceChild(newToggle, toggle);

      newToggle.addEventListener('click', () => {
        isExpanded = !isExpanded;

        if (isExpanded) {
          // Rozbalit
          content.style.maxHeight = `${actualHeight}px`;
          content.setAttribute('data-collapsed', 'false');
          newToggle.setAttribute('aria-expanded', 'true');

          // Přepnout texty a ikony
          newToggle.querySelector('.expand-text').classList.add('hidden');
          newToggle.querySelector('.collapse-text').classList.remove('hidden');
          newToggle.querySelector('.expand-icon').classList.add('hidden');
          newToggle.querySelector('.collapse-icon').classList.remove('hidden');
        } else {
          // Sbalit
          content.style.maxHeight = `${maxHeight}px`;
          content.setAttribute('data-collapsed', 'true');
          newToggle.setAttribute('aria-expanded', 'false');

          // Přepnout texty a ikony zpět
          newToggle.querySelector('.expand-text').classList.remove('hidden');
          newToggle.querySelector('.collapse-text').classList.add('hidden');
          newToggle.querySelector('.expand-icon').classList.remove('hidden');
          newToggle.querySelector('.collapse-icon').classList.add('hidden');
        }
      });
    } else {
      // Obsah není dlouhý - žádný fade efekt, žádné omezení výšky
      content.setAttribute('data-collapsed', 'false');
      content.style.maxHeight = 'none';
      content.style.overflow = 'visible';
    }
  }

  // Spustit při prvním načtení
  document.addEventListener('DOMContentLoaded', initCard);

  // Spustit při každém view transition (pro Astro View Transitions)
  document.addEventListener('astro:page-load', initCard);
</script>
