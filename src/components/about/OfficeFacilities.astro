---
import { Icon } from 'astro-icon/components';
import Lightbox from '../gallery/Lightbox.astro';
import GalleryButton from '../gallery/GalleryButton.astro';
import RoomInfoModal from '../modals/RoomInfoModal.astro';
import {
  ordinaceNemocneGallery,
  ordinaceZdraveGallery,
  cekarnaNenocneGallery,
  cekarnaZdraveGallery,
  hernaGallery
} from '../../data/galleries';
import type { GalleryId } from '../../types/gallery';

interface ColorScheme {
  bg: string;
  border: string;
  text: string;
  iconBg: string;
}

interface Facility {
  title: string;
  description: string;
  icon: string;
  imageAlt: string;
  galleryId: GalleryId;
  color: ColorScheme;
}

interface WaitingRoom {
  id: string;
  title: string;
  icon: string;
  emojiIcon: string;
  description: string;
  detailedContent: string;
  galleryId: GalleryId;
}

const facilities: Facility[] = [
  {
    title: 'Ordinace pro nemocné děti',
    description: 'Speciální ordinace určená pro vyšetření akutně nemocných dětí. Oddělené prostředí minimalizuje riziko přenosu infekce na ostatní pacienty.',
    icon: 'mdi:hospital-box',
    imageAlt: 'Ordinace pro nemocné děti',
    galleryId: 'ordinace-nemocne',
    color: {
      bg: 'bg-red-50',
      border: 'border-red-200',
      text: 'text-red-600',
      iconBg: 'bg-red-600'
    }
  },
  {
    title: 'Ordinace pro zdravé děti',
    description: 'Ordinace určená pro preventivní prohlídky, očkování a kontroly zdravých dětí včetně miminek. Čisté a bezpečné prostředí bez kontaktu s nemocnými.',
    icon: 'mdi:baby-face-outline',
    imageAlt: 'Ordinace pro zdravá miminka',
    galleryId: 'ordinace-zdrave',
    color: {
      bg: 'bg-green-50',
      border: 'border-green-200',
      text: 'text-green-600',
      iconBg: 'bg-green-600'
    }
  }
];

const waitingRooms: WaitingRoom[] = [
  {
    id: 'room-sick',
    title: 'Čekárna pro nemocné',
    icon: 'mdi:seat',
    emojiIcon: '😷',
    description: 'Oddělená čekárna pro akutně nemocné děti',
    detailedContent: `
      <h3 class="text-lg font-bold text-gray-900 mb-3">Bezpečný prostor pro nemocné děti</h3>
      <p class="mb-4">Čekárna pro nemocné je oddělena od zbytku ordinace, aby se minimalizovalo riziko přenosu infekce na ostatní pacienty. Prostor je pravidelně dezinfikován a větraný.</p>
      <ul class="list-disc list-inside space-y-2 mb-4">
        <li>Oddělený vstup a čekací prostor</li>
        <li>Zvýšená hygiena a dezinfekce</li>
        <li>Příslušné vybavení pro akutní ošetření</li>
        <li>Teplá a pohodlná atmosféra</li>
      </ul>
      <p class="text-sm text-gray-600"><strong>Tip:</strong> Objeďte se prosím předem, aby jsme mohli správně naplánovat vaši návštěvu a minimalizovat čekání.</p>
    `,
    galleryId: 'cekarna-nemocne'
  },
  {
    id: 'room-healthy',
    title: 'Čekárna pro zdravé',
    icon: 'mdi:seat-outline',
    emojiIcon: '✨',
    description: 'Čekárna pro preventivní kontroly a očkování',
    detailedContent: `
      <h3 class="text-lg font-bold text-gray-900 mb-3">Čistý prostor pro zdravé děti</h3>
      <p class="mb-4">Čekárna pro zdravé děti je určena pro preventivní prohlídky, očkování a kontroly zdravých dětí. Prostor je pečlivě udržován v hygienických standardech.</p>
      <ul class="list-disc list-inside space-y-2 mb-4">
        <li>Oddělený prostor bez kontaktu s nemocnými</li>
        <li>Bezpečné a čisté prostředí</li>
        <li>Hračky a knihy pro děti</li>
        <li>Příjemná a relaxační atmosféra</li>
      </ul>
      <p class="text-sm text-gray-600"><strong>Tip:</strong> Objednávka online zrychluje proces a minimalizuje čekání.</p>
    `,
    galleryId: 'cekarna-zdrave'
  },
  {
    id: 'room-playroom',
    title: 'Dětská herna',
    icon: 'mdi:teddy-bear',
    emojiIcon: '🧸',
    description: 'Prostor plný hraček a knih pro zábavu dětí během čekání',
    detailedContent: `
      <h3 class="text-lg font-bold text-gray-900 mb-3">Kdo si hraje – nezlobí</h3>
      <p class="mb-4">Hračky obnovujeme a snažíme se bezpečně děti zaujmout a zkrátit vždy nepříjemné čekání. Děti ke hře ale potřebují i Vás.</p>
      <div class="bg-blue-50 border-l-4 border-blue-500 p-4 rounded mb-4">
        <p class="text-gray-800"><strong>Objevujte jejich úhel pohledu, hrejte si, půjčte si u nás knížku a čtěte si.</strong> Mobily si rády v kabelce odpočinou, odpovědi na sms a maily počkají.</p>
      </div>
      <p class="mb-4 text-gray-700"><strong>I pošťák zvoní dvakrát.</strong> A ne – wi-fi nemáme.</p>
      <h4 class="font-bold text-gray-900 mb-2">Vaše pomoc je cenná</h4>
      <p class="mb-2">Sestřičkám pomůže, když hračky zlehka nasměrujete na původní místa. Děkujeme!</p>
      <p class="text-gray-700 font-medium">Naučit děti uklízet a spontánně pomáhat je prima.</p>
    `,
    galleryId: 'herna'
  }
];

// Helper funkce pro získání galerie podle ID
function getGallery(id: GalleryId) {
  const galleries = {
    'ordinace-nemocne': ordinaceNemocneGallery,
    'ordinace-zdrave': ordinaceZdraveGallery,
    'cekarna-nemocne': cekarnaNenocneGallery,
    'cekarna-zdrave': cekarnaZdraveGallery,
    'herna': hernaGallery
  };
  return galleries[id];
}
---
<div class="space-y-12">
  <!-- Intro -->
  <div class="max-w-3xl mx-auto text-center">
    <p class="text-lg text-gray-700 leading-relaxed">
      Naše ordinace je vybavena <strong class="text-blue-600">dvěma samostatnými ordinačními místnostmi</strong>
      a <strong class="text-blue-600">čekárnami</strong>, které zajišťují maximální
      <strong class="text-blue-600">hygienu a bezpečnost</strong> všech malých pacientů.
    </p>
  </div>

  <!-- Ordinace Cards -->
  <div class="grid md:grid-cols-2 gap-8">
    {facilities.map((facility) => {
      const gallery = getGallery(facility.galleryId);
      const hasImages = gallery.images.length > 0;

      return (
        <div class={`${facility.color.bg} border-2 ${facility.color.border} rounded-2xl overflow-hidden hover:shadow-lg transition-all group`}>
          <!-- Image Placeholder -->
          <div class="relative aspect-video bg-linear-to-br from-gray-100 to-gray-200 flex items-center justify-center overflow-hidden cursor-pointer"
               onclick={hasImages ? `openLightbox_${facility.galleryId}(0)` : null}>
            <div class="absolute inset-0 bg-linear-to-br from-white/50 to-transparent"></div>
            <div class="relative z-10 text-center">
              <Icon name={facility.icon} class={`w-16 h-16 ${facility.color.text} mx-auto mb-2 opacity-30`} />
              <p class="text-gray-500 text-sm font-medium">
                {hasImages ? 'Klikněte pro zobrazení galerie' : 'Fotografie připravujeme'}
              </p>
            </div>

            <!-- Gallery Button -->
            <div class="absolute bottom-4 right-4 opacity-0 group-hover:opacity-100 transition-opacity">
              <GalleryButton
                galleryId={facility.galleryId}
                variant="overlay"
                imageCount={gallery.images.length}
              />
            </div>
          </div>

          <!-- Content -->
          <div class="p-6">
            <div class="flex items-start gap-4 mb-4">
              <div class={`${facility.color.iconBg} w-12 h-12 rounded-xl flex items-center justify-center shrink-0 shadow-lg`}>
                <Icon name={facility.icon} class="w-6 h-6 text-white" />
              </div>
              <div>
                <h3 class="text-xl font-bold text-gray-900 mb-2">{facility.title}</h3>
                <p class="text-gray-700 leading-relaxed">{facility.description}</p>
              </div>
            </div>
          </div>
        </div>
      );
    })}
  </div>

  <!-- Waiting Rooms & Playroom -->
  <div class="bg-linear-to-br from-blue-50 to-purple-50 rounded-2xl p-8 border-2 border-blue-100 mt-16">
    <div class="flex items-center gap-3 mb-6">
      <div class="bg-blue-600 w-12 h-12 rounded-xl flex items-center justify-center shadow-lg">
        <Icon name="mdi:door-open" class="w-6 h-6 text-white" />
      </div>
      <h3 class="text-2xl font-bold text-gray-900">Další prostory ordinace</h3>
    </div>

    <div class="grid md:grid-cols-3 gap-6">
      {waitingRooms.map((room) => {
        const gallery = getGallery(room.galleryId);
        const hasImages = gallery.images.length > 0;

        return (
          <div
            class="bg-white rounded-xl p-6 border border-gray-200 hover:border-blue-400 hover:shadow-lg transition-all cursor-pointer room-card"
            data-modal-id={room.id}
          >
            <div class="bg-linear-to-br from-blue-100 to-purple-100 w-14 h-14 rounded-xl flex items-center justify-center mb-4 mx-auto">
              <span class="text-3xl">{room.emojiIcon}</span>
            </div>
            <h4 class="text-lg font-bold text-gray-900 mb-2 text-center">{room.title}</h4>
            <p class="text-gray-600 text-sm text-center leading-relaxed mb-4">{room.description}</p>

            {/* Bottom section with buttons */}
            <div class="flex justify-center gap-2 flex-wrap">
              <button
                class="px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white font-medium rounded-lg text-sm modal-trigger"
                data-modal-id={room.id}
              >
                Více info
              </button>
              {hasImages && (
                <GalleryButton
                  galleryId={room.galleryId}
                  variant="secondary"
                  label="Fotky"
                  imageCount={gallery.images.length}
                />
              )}
            </div>
          </div>
        );
      })}
    </div>
    </div>
  </div>

  <!-- Modals for waiting rooms -->
  {waitingRooms.map((room) => (
    <RoomInfoModal
      roomId={room.id}
      title={room.title}
      icon={room.emojiIcon}
      shortDescription={room.description}
      detailedContent={room.detailedContent}
    />
  ))}

  <!-- Info Note -->
  <div class="bg-blue-600 text-white rounded-xl p-6 flex items-start gap-4 mt-8">
    <Icon name="mdi:information-outline" class="w-6 h-6 shrink-0 mt-1" />
    <div>
      <p class="font-medium mb-3">Oddělené prostory pro maximální bezpečnost</p>
      <p class="text-blue-100 text-sm leading-relaxed">
        Rozdělení nemocných a zdravých dětí je klíčové pro prevenci šíření infekcí. Snažíme se o dodržení tohoto principu již při samotném objednávání dětí. Lépe se pochopitelně daří dodržovat v teplých měsících roku, hůře při epidemiích respiračních nákaz. Stálá prosba – objednávejte se, prosím, vždy! Pomáháte tím nám, ale hlavně sobě. Dvě oddělené ordinace i čekárny jsou každopádně dalším velkým pomocníkem v separaci zdravých a nemocných dětí.
      </p>
    </div>
  </div>

<!-- Lightbox modals -->
<Lightbox gallery={ordinaceNemocneGallery} />
<Lightbox gallery={ordinaceZdraveGallery} />
<Lightbox gallery={cekarnaNenocneGallery} />
<Lightbox gallery={cekarnaZdraveGallery} />
<Lightbox gallery={hernaGallery} />

<!-- Global modal handlers -->
<script is:inline>
  // Use astro:page-load instead of DOMContentLoaded for View Transitions compatibility
  function initializeRoomModals() {
    console.log('Room modals: Initializing...');

    // Generic function to open any modal by ID
    function openModal(modalId) {
      const modal = document.getElementById('modal-' + modalId);
      if (modal) {
        console.log('Opening modal:', modalId);
        modal.style.display = 'flex';
        document.body.style.overflow = 'hidden';
      } else {
        console.error('Modal not found:', 'modal-' + modalId);
      }
    }

    // Generic function to close any modal by ID
    function closeModal(modalId) {
      const modal = document.getElementById('modal-' + modalId);
      if (modal) {
        console.log('Closing modal:', modalId);
        modal.style.display = 'none';
        document.body.style.overflow = 'auto';
      }
    }

    // Handle clicks on room cards (whole card is clickable)
    const roomCards = document.querySelectorAll('.room-card');
    console.log('Found room cards:', roomCards.length);
    roomCards.forEach(function(card) {
      card.addEventListener('click', function(e) {
        // Don't open modal if clicking on a button or link inside
        if (e.target.closest('.modal-trigger') || e.target.closest('button') || e.target.closest('a')) {
          return;
        }
        const modalId = card.getAttribute('data-modal-id');
        if (modalId) {
          openModal(modalId);
        }
      });
    });

    // Handle clicks on "Více info" buttons
    const modalTriggers = document.querySelectorAll('.modal-trigger');
    console.log('Found modal triggers:', modalTriggers.length);
    modalTriggers.forEach(function(trigger) {
      trigger.addEventListener('click', function(e) {
        e.stopPropagation(); // Prevent card click
        const modalId = trigger.getAttribute('data-modal-id');
        if (modalId) {
          openModal(modalId);
        }
      });
    });

    // Handle clicks on close buttons inside modals
    const closeButtons = document.querySelectorAll('.modal-close-btn');
    console.log('Found close buttons:', closeButtons.length);
    closeButtons.forEach(function(btn) {
      btn.addEventListener('click', function(e) {
        e.stopPropagation();
        const modalId = btn.getAttribute('data-modal-id');
        if (modalId) {
          closeModal(modalId);
        }
      });
    });

    // Handle clicks on modal overlays (click outside to close)
    const modals = document.querySelectorAll('[id^="modal-room-"]');
    console.log('Found modals:', modals.length);
    modals.forEach(function(modal) {
      modal.addEventListener('click', function(e) {
        if (e.target === modal) {
          const modalId = modal.id.replace('modal-', '');
          closeModal(modalId);
        }
      });
    });

    // Handle Escape key to close modals
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape') {
        modals.forEach(function(modal) {
          if (modal.style.display !== 'none') {
            const modalId = modal.id.replace('modal-', '');
            closeModal(modalId);
          }
        });
      }
    });
  }

  // Initialize on first load
  document.addEventListener('DOMContentLoaded', initializeRoomModals);

  // Re-initialize after View Transitions navigation
  document.addEventListener('astro:page-load', initializeRoomModals);
</script>